package com.example.bluepigeon.ui.addPost

import android.os.Build
import androidx.annotation.RequiresApi
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.padding
import androidx.compose.material3.Button
import androidx.compose.material3.ButtonDefaults
import androidx.compose.material3.ExperimentalMaterial3Api
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.OutlinedTextField
import androidx.compose.material3.Text
import androidx.compose.material3.TextFieldDefaults
import androidx.compose.runtime.Composable
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.unit.dp
import java.time.LocalDate
import java.time.format.DateTimeFormatter


@RequiresApi(Build.VERSION_CODES.O)
@OptIn(ExperimentalMaterial3Api::class)
@Composable
fun AddPostScreen() {
    // State to hold the input values
    val dateState = remember {
        mutableStateOf(
            LocalDate.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd"))
        )
    }
    val moodState = remember { mutableStateOf("") }
    val nameState = remember { mutableStateOf("") }
    val entryState = remember { mutableStateOf("") }

    Column(
        modifier = Modifier
            .fillMaxSize()
            .padding(16.dp),
        verticalArrangement = Arrangement.spacedBy(16.dp)
    ) {
        Text(
            text = "Add your entry here",
            style = MaterialTheme.typography.headlineLarge,
            color = Color.Black
        )
        Text(
            text = "Your secrets are safe with us!",
            style = MaterialTheme.typography.bodyMedium,
            color = Color.Gray
        )
        // Mood input field
        OutlinedTextField(
            value = moodState.value,
            onValueChange = { moodState.value = it },
            modifier = Modifier.fillMaxWidth(),
            label = { Text("Mood") },
            colors = TextFieldDefaults.outlinedTextFieldColors(
                focusedBorderColor = Color.Black,
                unfocusedBorderColor = Color.Black,
                focusedLabelColor = Color.Black,
            )
        )

        // Name input field
        OutlinedTextField(
            value = nameState.value,
            onValueChange = { nameState.value = it },
            modifier = Modifier.fillMaxWidth(),
            label = { Text("Name") },
            colors = TextFieldDefaults.outlinedTextFieldColors(
                focusedBorderColor = Color.Black,
                unfocusedBorderColor = Color.Black,
                focusedLabelColor = Color.Black,
            )
        )

        // Entry input field
        OutlinedTextField(
            value = entryState.value,
            onValueChange = { entryState.value = it },
            modifier = Modifier.fillMaxWidth(),
            label = { Text("Entry") },
            colors = TextFieldDefaults.outlinedTextFieldColors(
                focusedBorderColor = Color.Black,
                unfocusedBorderColor = Color.Black,
                focusedLabelColor = Color.Black,
            )
        )

        // Button to add the entry
        Button(
            onClick = {
                // Here you can handle adding the entry to your data store or repository
                println("Date: ${dateState.value}")
                println("Mood: ${moodState.value}")
                println("Name: ${nameState.value}")
                println("Entry: ${entryState.value}")
            },
            modifier = Modifier.align(Alignment.CenterHorizontally),
            colors = ButtonDefaults.buttonColors(containerColor = Color.Black)
        ) {
            Text(text = "Add Entry")
        }
    }
}